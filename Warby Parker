/* ULTIMATE GOAL: 

Let’s find out whether or not users who get more pairs to try on at home will be more likely to make a purchase. */

SELECT question,
  COUNT(DISTINCT user_id)
FROM survey
GROUP BY question;

SELECT * FROM quiz
LIMIT 5;
SELECT * FROM home_try_on
LIMIT 5;
SELECT * FROM purchase
LIMIT 5;

/* Each row will represent a single user from the browse table:

If the user has any entries in home_try_on, then is_home_try_on will be True.
number_of_pairs comes from home_try_on table
If the user has any entries in purchase, then is_purchase will be True.
Use a LEFT JOIN to combine the three tables, starting with the top of the funnel (quiz) and ending with the bottom of the funnel (purchase). */

SELECT q.user_id, 
  h.user_id IS NOT NULL AS 'is_home_try_on', 
  h.number_of_pairs, 
  p.user_id IS NOT NULL AS 'is_purchase'
FROM quiz q
LEFT JOIN home_try_on h
  ON h.user_id = q.user_id
LEFT JOIN purchase p
  ON p.user_id = q.user_id
LIMIT 10;

/*We can calculate overall conversion rates by aggregating across all rows.
We can compare conversion from quiz→home_try_on and home_try_on→purchase.*/

WITH funnels AS (SELECT q.user_id, 
  h.user_id IS NOT NULL AS 'is_home_try_on', 
  h.number_of_pairs, 
  p.user_id IS NOT NULL AS 'is_purchase'
FROM quiz q
LEFT JOIN home_try_on h
  ON h.user_id = q.user_id
LEFT JOIN purchase p
  ON p.user_id = q.user_id
LIMIT 10;)
SELECT COUNT(*) AS 'num_quiz',
  SUM(is_purchase) AS 'num_purchase',
  1.0 * SUM(is_purchase) / COUNT(*) AS 'overall_conversation_rate'
  1.0 * SUM(is_home_try_on) / COUNT(*) AS 'quiz_to_home_try_on',
  1.0 * SUM(is_purchase) / SUM(is_home_try_on) AS ' home_to_purchase'
FROM funnels;

/*We can calculate the difference in purchase rates between customers who had 3 number_of_pairs with ones who had 5. */

WITH funnels AS (SELECT q.user_id, 
  h.user_id IS NOT NULL AS 'is_home_try_on', 
  h.number_of_pairs, 
  p.user_id IS NOT NULL AS 'is_purchase'
FROM quiz q
LEFT JOIN home_try_on h
  ON h.user_id = q.user_id
LEFT JOIN purchase p
  ON p.user_id = q.user_id
LIMIT 10;)
SELECT number_of_pairs,
  COUNT(*) AS 'num_quiz',
  SUM(is_purchase) AS 'num_purchase',
  1.0 * SUM(is_purchase) / COUNT(*) AS 'overall_conversation_rate'
GROUP BY number_of_paris
FROM funnels;
