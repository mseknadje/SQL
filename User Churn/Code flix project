 SELECT MIN(subscription_start), MAX(subscription_end)
 FROM subscriptions;

 WITH months AS(
   SELECT 
    '2017-01-01' as first_day,
    '2017-01-31' as last_day
    UNION
    SELECT
    '2017-02-01' as first_day,
    '2017-02-31' as last_day
    UNION
    SELECT
    '2017-03-01' as first_day,
    '2017-03-31' as last_day
 ),
 cross_join AS (
   SELECT *
   FROM subscriptions
   CROSS JOIN months
 ),
 status AS(
   SELECT 
      cross_join.id,
      cross_join.first_day AS 'month',
      CASE
        WHEN (segment = 87) 
          AND (subscription_start < first_day) AND (subscription_end > first_day OR subscription_end IS NULL) THEN 1
        ELSE 0
      END is_active_87,
      CASE 
        WHEN (segment = 30)
          AND (subscription_start < first_day)
          AND (subscription_end > first_day OR subscription_end IS NULL) THEN 1
        ELSE 0
      END is_active_30,
      CASE 
        WHEN (segment = 87)
          AND (subscription_end BETWEEN first_day AND last_day) THEN 1
        ELSE 0
      END is_canceled_87,
      CASE
        WHEN (segment = 30)
          AND (subscription_end BETWEEN first_day AND last_day) THEN 1
        ELSE 0
      END is_canceled_30
  FROM cross_join
 ),
 status_aggregate AS 
 (SELECT 
    month, 
    SUM(is_active_87) AS 'active_87',
    SUM(is_active_30) AS 'active_30', 
    SUM(is_canceled_87) AS 'cancelled_87',
    SUM(is_canceled_30) AS 'cancelled_30'
FROM status
GROUP BY month
 )
 SELECT
  month,
  1.0 * status_aggregate.cancelled_87 / status_aggregate.active_87 AS 'churn_rate_87',
  1.0 * status_aggregate.cancelled_30 / status_aggregate.active_30 AS 'churn_rate_30'
FROM status_aggregate
GROUP BY month;
